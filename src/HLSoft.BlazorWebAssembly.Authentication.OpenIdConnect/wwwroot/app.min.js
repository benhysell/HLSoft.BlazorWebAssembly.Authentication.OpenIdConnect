!function(){window.HLSoftBlazorWebAssemblyAuthenticationOpenIdConnect={};let n=null,e=window.sessionStorage;function t(n){DotNet.invokeMethodAsync("HLSoft.BlazorWebAssembly.Authentication.OpenIdConnect","NotifySilentRefreshTokenFail",n)}function o(n){return n||(n={}),n.userStore=new Oidc.WebStorageStateStore({store:e}),n}function i(n){return n.isCode?new Oidc.UserManager(o({...n,loadUserInfo:!0,response_mode:"query"})):new Oidc.UserManager(o(n))}window.HLSoftBlazorWebAssemblyAuthenticationOpenIdConnect.configOidc=function(e){n||(n=new Oidc.UserManager(o(e)),n.events.addSilentRenewError(t),e.endSessionEndpoint&&(n.metadataService.getEndSessionEndpoint=function(){return Promise.resolve(e.endSessionEndpoint)}))},window.HLSoftBlazorWebAssemblyAuthenticationOpenIdConnect.signinRedirect=function(){return n.signinRedirect()},window.HLSoftBlazorWebAssemblyAuthenticationOpenIdConnect.signoutRedirect=function(){return n.signoutRedirect()},window.HLSoftBlazorWebAssemblyAuthenticationOpenIdConnect.getUser=function(){return n?n.getUser():null},window.HLSoftBlazorWebAssemblyAuthenticationOpenIdConnect.removeUser=function(){return n.removeUser()},window.HLSoftBlazorWebAssemblyAuthenticationOpenIdConnect.signinPopup=function(){return n.signinPopup()},window.HLSoftBlazorWebAssemblyAuthenticationOpenIdConnect.signoutPopup=function(){return n.signoutPopup()},window.HLSoftBlazorWebAssemblyAuthenticationOpenIdConnect.signinSilent=function(){return n.signinSilent()},window.HLSoftBlazorWebAssemblyAuthenticationOpenIdConnect.processSigninCallback=function(n){return i(n).signinRedirectCallback().then()},window.HLSoftBlazorWebAssemblyAuthenticationOpenIdConnect.processSilentCallback=function(){return new Oidc.UserManager(o()).signinSilentCallback(window.location.href)},window.HLSoftBlazorWebAssemblyAuthenticationOpenIdConnect.processSigninPopup=function(n){return i(n).signinPopupCallback()},window.HLSoftBlazorWebAssemblyAuthenticationOpenIdConnect.processSignoutPopup=function(n){i(n).signoutPopupCallback(!1)},window.HLSoftBlazorWebAssemblyAuthenticationOpenIdConnect.setPageDisplayStatus=function(n){document.body.style.display=n?"block":"none"},window.HLSoftBlazorWebAssemblyAuthenticationOpenIdConnect.silentOpenUrlInIframe=function(n,e){return new Promise(((t,o)=>{let i=document.createElement("iframe");i.style.display="none",i.setAttribute("src",n),document.body.appendChild(i);let r=window.setTimeout((()=>{o(new Error("IFrame window timed out."))}),e);i.onload=()=>{document.body.removeChild(i),window.clearTimeout(r),t()}}))},window.HLSoftBlazorWebAssemblyAuthenticationOpenIdConnect.configUserStore=function(n){e=n}}();
